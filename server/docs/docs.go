// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/game": {
            "get": {
                "description": "Retrieves all games from the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Get all games",
                "responses": {
                    "200": {
                        "description": "List of games",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Game"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new dart game and sets up the corresponding hub",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Create a new game",
                "parameters": [
                    {
                        "description": "Game information",
                        "name": "game",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Game"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created game",
                        "schema": {
                            "$ref": "#/definitions/models.Game"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/user": {
            "get": {
                "description": "Retrieves all players from the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "players"
                ],
                "summary": "Get all players",
                "responses": {
                    "200": {
                        "description": "List of players",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Player"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new player in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "players"
                ],
                "summary": "Create a new player",
                "parameters": [
                    {
                        "description": "Player information",
                        "name": "player",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Player"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created player",
                        "schema": {
                            "$ref": "#/definitions/dto.Player"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.Game": {
            "type": "object",
            "properties": {
                "gameMode": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "players": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Player"
                    }
                },
                "startingScore": {
                    "type": "integer"
                }
            }
        },
        "dto.Player": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Game": {
            "type": "object",
            "properties": {
                "gameMode": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "players": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Player"
                    }
                }
            }
        },
        "models.Player": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Triffgonix API",
	Description:      "Triffgonix api documentation",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
